name: Java CI

on:
  push:
    branches: [ "master" ]
    paths:
      - 'Eindopdracht-1-taskservice/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Build with Maven
        working-directory: Eindopdracht-1-taskservice
        run: mvn -B install --file pom.xml

      - name: Code Analysis
        working-directory: Eindopdracht-1-taskservice
        run: |
          mvn sonar:sonar \
          -Dsonar.projectKey=eindopdracht-1-tygo-joost \
          -Dsonar.host.url=http://sonar.cloud-native-minor.it/ \
          -Dsonar.login=45d50dd41d616b6d7bcb94387588d9ea2a89c7da

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ASIA46RPIWDV44YRZGXL
          aws-secret-access-key: Z/86hfIFI5C/QeJwRvxBz60pRABgq1K1AUAU4fh0
          aws-session-token: FwoGZXIvYXdzEMj//////////wEaDEb3swui1kX/DHIgPCK+AV23W6yn2X1vnAgXAV8TdFeb9lcg3GjAce0pJBPuKJCxO6ELLDDFsJhhxvMn03gxzF5WkBXG6Pfaknx8vM+x/gvqFA9J4kcX1Ctv2iYYsE4P9LhfbxfygdvbBW2gqr+rEb6dKeUk9kNaG7eU52cQRSNasN0R5N2H4q2Hb1zFigtV+XsLP2ns44iMPGC31TFIc/L62vRiERQnR0qZOmn6+N/mRGQ5aTeq3kKlRU1HiNbNVTRiMeAoRQdVRaiI8XIo3PfPmgYyLbA4gQU689pVJ3kTh3vx04VLrUh9kifjzIZNni8LKB+bGIz678DS0UUTh6SDIQ==
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag and push the Docker image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: eindopdracht-ecr
          IMAGE_TAG: v${{ github.run_number }}
        working-directory: Eindopdracht-1-taskservice
        run: |
          docker build -t ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG} .
          docker push ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}
          echo "pushed image: ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}"

      - name: Tag the build version
        run: |
          git tag "v${GITHUB_RUN_NUMBER}"
          git push origin "v${GITHUB_RUN_NUMBER}"

      - name: Deploy container on EC2
        env:
          PRIVATE_KEY: -----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAnY6/Vn5iMYLjp5DOZP3L7We0IbvHf96pG0HILQAsTM+5FP6f
lCHvEeQrpPpb4Tk5Ke983JR8C2QhdK0lJaHtrEt/0MLtNWvi4Oa+Yg+VgYWWL56K
BI25uQsr6TIu7dERRuJo+vX8n3UsPcrGW7s4GxkrA4QWagQ+wLcyIgug6qiVqZUS
WtCovxqPnX5BK4ycTCBFxsaVegOhx1IBEDw957x4gMdHXifsIGh4yv+QEnlzVk/5
/kaSSgXmgh/zBQ5tlgpFfO53JpZfRDWZk+fd1Zt94FrpOO9z2poGnEahduIWSpf4
e/av2EQuoDxpfiz3QP8EFi7Oz2vOomImsHYZQwIDAQABAoIBADNvjZFcEwxc0Zs7
j9WycSegylKU7e0VsJlAYWwneU7eJWrwMQJ4DYcGuSTTwrkFKF9DWrzcEJ7bYnyn
pc/iTCgKQcDSUgQ1o0yOp6p1sfYluUD0fdQ8vFvnhL9NbbqfnQdKFMGRGpan9vh5
QUZjGU7naX5tWa/kkOPzKn+o0jCosQdIDKDshdadkwnvyApbg8nBFG76jzzFqEcp
DPEFhdB8h+o7oZt6mwVHwvylXp7N8dPvUVQR27WJN+cT4Ikgp0T7Lxb9dEiwmT9l
fyboy4HT5SZtwSYOPRE6Hj+HFUl0jzxSg/B8qftkQ2q1dCtkOHHWERoLbsaJkS4q
7bQYqFkCgYEA9CqVfKWrBAeI5nPyhWxjSDOYM4Op3mKFm1Tm1AYC33e0n9e+TxP1
vSwDiKrR//uTIhCS9+8o1LeLKp7A4mL4J36Yl3UJkyVy0V5Vkqn48Ei2OxFkFdRj
xciqdv4OL/RcSo9C/CdqC77P+ZynTUyDO601MdktJuFAyP6ojimDOJ0CgYEApTGX
25LvpXgfmUEPXXtGZxf7kjtGYE17QrT6ctVU1+weq+mYB79xS4R48OL4eyjsv07L
XQcGe36U8eWA+sW0rdwpd7rOcLQ6A50d0mF6+mTOfbXWgyGL8RUwKyYSYjYsVYnx
FVN0C+YSTvGBF+yYD9Ao4x7Dcy/p9R5VULLPQ18CgYEA8jPzyYvFEuAuivvlTTjx
W0Pi7ObkcHcmtakIuLWlz+q8v/qRC3xvPdIVR1K7scPqddYfE9anmCrh38tO5sLq
CrNnxoYQk2iIduuu0yfMiv511i4wK/9dYWrmvdbSV/t8OXHXLq4iYbhMMf2Vb/ZA
D8iHhgU65uB3FWqX5T2Er3kCgYA2pPwV3zo041KYkIPzqWa1jaJjUgZKrva6L0G1
oMoLDwlqVsA6t+JTV8Pl8z69BuGhuv/ciwli6pF8ny2WRrYo2O5Cs+G8OHIEZgHK
aQKUN6pyvSbzg7JWEms3qsVkBYWO2i2Mn2mA0h92S78nWdVHTdVoo/GFdfEPa3RP
WIblQwKBgGObBYfcVNX3IP3gcAewusPk2YDChJTRVg748uR7UpXM4cTtRvitWwWV
GhM73pTT6CWgZFlPHKr3i/4pwybWmOwUvoA1kugoGDmXmy7H7z1j1roX+LtH0ghp
SWRyOh05j1RmwBtBgu5QoGyBv20k8nWGJ/hrSBy1+NKYNlQdA1Sz
-----END RSA PRIVATE KEY-----
          HOSTNAME : ec2-54-167-194-33.compute-1.amazonaws.com
          USER_NAME : ec2-user
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: eindopdracht-ecr
          IMAGE_TAG: v${{ github.run_number }}
        run: |
          echo "${PRIVATE_KEY}" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} "
            echo \"Image to deploy: ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}\"
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${ECR_REGISTRY}/${ECR_REPOSITORY}
            docker rm -f Eindopdracht-1-taskservice
            docker run -d -p 8080:8080 -e SPRING_PROFILES_ACTIVE=staging --name Eindopdracht-1-taskservice ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG} 
          "

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: v${{ github.run_number }}
          draft: false
          prerelease: false
